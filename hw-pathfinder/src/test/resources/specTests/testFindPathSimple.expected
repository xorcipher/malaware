# Find a simple path with Dijkstra's algorithm when
# the path found is much longer than multiple alternatives,
# but still the lowest cost path.

created graph simpleGraph

added node A to simpleGraph
added node B to simpleGraph
added node C to simpleGraph
added node D to simpleGraph
added node E to simpleGraph
added node F to simpleGraph
added node G to simpleGraph
added node H to simpleGraph
added node I to simpleGraph
added node J to simpleGraph

added edge 10.000 from A to B in simpleGraph
added edge 1.000 from A to C in simpleGraph
added edge 1.000 from C to D in simpleGraph
added edge 1.000 from D to B in simpleGraph
added edge 0.100 from A to G in simpleGraph
added edge 0.100 from G to F in simpleGraph
added edge 0.100 from F to E in simpleGraph
added edge 0.100 from E to H in simpleGraph
added edge 0.100 from H to I in simpleGraph
added edge 0.100 from I to J in simpleGraph
added edge 0.100 from J to B in simpleGraph

path from A to B:
A to G with weight 0.100
G to F with weight 0.100
F to E with weight 0.100
E to H with weight 0.100
H to I with weight 0.100
I to J with weight 0.100
J to B with weight 0.100
total cost: 0.700